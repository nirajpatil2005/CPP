Bubble Sort:
In bubble sort, adjacent elements are compared and swapped if they are in the wrong order. This process continues until the entire 
array is sorted.
Bubble sort has a time complexity of O(n^2) in the worst and average cases, making it inefficient for large datasets.
Bubble sort has a space complexity of O(1) because only a constant amount of extra space is required.

Selection Sort:
Selection sort divides the input array into two parts: the sorted part and the unsorted part. It repeatedly selects the smallest
 (or largest) element from the unsorted part and moves it to the beginning (or end) of the sorted part.
Selection sort also has a time complexity of O(n^2) in the worst and average cases, making it inefficient for large datasets.
Selection sort has a space complexity of O(1) because only a constant amount of extra space is required.

Insertion Sort:
Insertion sort builds the final sorted array (or list) one item at a time. It takes each element from the input list and inserts 
it into its correct position in the sorted part of the array.
Insertion sort is more efficient than bubble sort and selection sort for small datasets and partially sorted arrays.
1It has a time complexity of O(n^2) in the worst case but can perform better than bubble sort and selection sort for nearly sorted arrays.
Insertion sort also has a space complexity of O(1) because only a constant amount of extra space is required.
Comparison:

Bubble sort and selection sort have similar time complexities and are both considered inefficient for large datasets.
Insertion sort can be more efficient than bubble sort and selection sort for partially sorted arrays or small datasets.
Insertion sort tends to perform better than bubble sort and selection sort in practice, especially for nearly sorted arrays.
All three sorting algorithms have space complexities of O(1) and are in-place sorting algorithms, meaning they do not require additional memory proportional to the input size.
Selection sort generally performs fewer swaps than bubble sort but still has the same time complexity.
Bubble sort has a tendency to perform more swaps than both selection sort and insertion sort, making it less efficient in practice.